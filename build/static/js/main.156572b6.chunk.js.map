{"version":3,"sources":["img/bilbo.jpg","requests.ts","views/Database.tsx","views/Footer.tsx","views/Header.tsx","views/Upload.tsx","views/SearchForm.tsx","views/Gifs.tsx","views/Edit.tsx","views/NewMovie.tsx","index.tsx"],"names":["module","exports","a","fetch","response","json","body","status","Error","message","Data","styled","div","StyledTable","table","Database","React","useState","movies","setMovies","sortType","setSortType","history","useHistory","useEffect","Requests","then","sortMovies","catch","err","console","log","moviesParam","sortedAlphabetically","sort","b","sortedNumerically","className","value","onChange","e","target","selected","id","map","movie","index","key","onClick","push","title","imdb","rtc","mtc","smn","comments","href","bilbo","Head","Header","to","Load","Upload","props","callServerForDatabase","handleUpload","files","setState","uploadedFile","loaded","preventDefault","onClickHandler","data","FormData","append","state","axios","post","res","statusText","listOfMovies","String","__v","Number","_id","this","method","action","encType","name","type","Component","SearchFormStyle","ErrorComponent","SearchFormComponent","searchMovie","responseToSearchMovie","year","error","undefined","youtubeData","items","videoId","youtubeID","compareList","trailerList","compareCheck","handleSubmit","headers","JSON","stringify","bodyArr","movieYear","movieTitle","getYoutubeAPIData","KEY","process","queryYear","queryTitle","query","encodeURIComponent","URI","YT","ID","includes","alert","length","onSubmit","data-key","runtime","trailerID","src","allowFullScreen","previousMovieTrailer","nextMovieTrailer","addToCompareList","CompareList","CompareListButton","renderSearchForm","renderMovieTrailer","renderCompareList","Gif","Gifs","pictureUrl","listOfUrls","urlArr","i","listOfGifs","createListOfUrlsAndTitles","gif","alt","EditBody","Edit","params","match","handleUpdate","edited","handleDelete","handleChange","bind","thisStateMovieClone","updatedMovieObj","NewMovie","added","GlobalStyle","createGlobalStyle","Container","ReactDOM","render","StrictMode","path","component","SearchForm","exact","document","getElementById"],"mappings":"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","file":"static/js/main.156572b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bilbo.550c8d98.jpg\";","export async function getMovies() {\n    const response = await fetch('/database');\n    const body = await response.json();\n\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport * as Requests from '../requests';\nimport { Movie } from '../types';\n\nconst Data = styled.div`\n        text-align: center;\n        /* display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center; */\n        width: auto;\n        height: 100vw; \n        \n        /* position: relative; */\n        /* top:0;\n        bottom: 0;\n        left: 0;\n        right: 0; */\n        \n        margin: 1px;\n\n        #submitButton {\n            margin: 15px;\n            width: 250px;\n            background-color: olivedrab;\n\n            :hover {\n                background-color: lightpink;\n            }\n        }\n\n        .returnLink{\n          font-size: 1.2em;\n          margin: 2px;\n        }\n`;\n\nconst StyledTable = styled.table`\n  caption-side: top;\n  border: none;\n  border-collapse: collapse;\n  width: 100vw;\n  max-width: 800px;\n  font-size: 1.8vw;\n\n\n  th, td {\n      border: none;\n  }\n\n  td {\n    padding: 15px 20px;\n  }\n\n  #commentsTitle {\n    max-width: 200px;\n  }\n\n  #commentsData {\n      text-align: left;\n      max-width: 200px;\n  }\n\n  tbody tr {\n    :nth-of-type(odd) {\n      background-color: #efefef;\n    }\n    :nth-of-type(even) {\n      background-color: #fefefe;\n    }\n    :hover {\n      background-color: lightpink;\n    }\n  }\n  thead > tr {\n    background-color: #c2c2c2;\n  }\n  caption {\n    font-size: 1.5vw;\n    padding: 5px;\n    font-weight: bold;\n  }\n\n`;\n\n\nconst Database = () => {\n\n  const [movies, setMovies] = React.useState<Movie[]>([]);\n  const [sortType, setSortType] = React.useState<keyof Movie>('title');\n  const history = useHistory();\n\n  React.useEffect(() => {\n    Requests.getMovies()\n      .then(sortMovies)\n      .catch(err => console.log(err));\n  })\n\n  const sortMovies = (moviesParam: Movie[] = movies) => {\n\n    const sortedAlphabetically = [...moviesParam].sort((a: Movie, b: Movie) => {\n      if (b[sortType] > a[sortType]) return -1;\n      else if (a[sortType] > b[sortType]) return 1;\n      return 0\n    });\n\n    const sortedNumerically = [...moviesParam].sort((a: Movie, b: Movie) => {\n      if (b[sortType] > a[sortType]) return 1;\n      else if (a[sortType] > b[sortType]) return -1;\n      return 0\n    });\n\n    if(sortType == 'title') setMovies(sortedAlphabetically);\n    else setMovies(sortedNumerically);\n  }\n\n\n  return (\n    <Data>\n        <div>\n        <h1>Movies We've Seen</h1>\n\n        <p>\n          <label>\n                  Sort movies by: &nbsp;\n\n          <select className=\"sortSelect\" value={sortType} onChange={(e: any) => setSortType(e.target.value)}>\n\n            <option selected value=\"title\">Title</option>\n            <option value=\"imdb\">IMDB</option>\n            <option value=\"rtc\">Rotten Tomatoes</option>\n            <option value=\"mtc\">MetaCritic</option>\n            <option value=\"smn\">Scary Movie Night</option>\n\n          </select>\n          </label>\n        </p>\n        </div>\n\n      <StyledTable>\n      <thead>\n        <tr>\n          <th>Movie Title</th>\n          <th>IMDB</th>\n          <th>RTC</th>\n          <th>MTC</th>\n          <th>SMN</th>\n          <th id=\"commentsHead\">Comments</th>\n        </tr>\n      </thead>\n      <tbody>\n        {movies.map((movie, index) => (\n          <tr key={index} onClick={() => history.push(`/edit/${movie.title}`)}>\n            <td>{movie.title}</td>\n            <td>{movie.imdb}</td>\n            <td>{movie.rtc}</td>\n            <td>{movie.mtc}</td>\n            <td>{movie.smn}</td>\n            <td id=\"commentsData\">{movie.comments}</td>\n          </tr>\n        ))}\n      </tbody>\n    </StyledTable >\n    <br />\n    <button onClick={() => history.push('/new')}><h2>Add New Movie</h2></button>\n    <br />\n    <br />\n    <a className=\"returnLink\" href=\"/\"><i>Return To Main Page</i></a>\n  </Data >\n)\n}\n\nexport default Database;","import React from 'react';\nimport styled from 'styled-components';\nimport bilbo from '../img/bilbo.jpg';\n\nconst Foot = styled.div`\n\n    box-sizing: border-box;\n    width: 100%;\n    height: 150px;\n    padding: 10px;\n    background-image: url(${bilbo});\n    background-repeat: round repeat-x;\n    background-size: contain;\n`;\n\nconst Footer = () => {\n    return (\n        <Foot>\n        </Foot>\n    )\n};\n\nexport default Footer;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Head = styled.div`\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: lightgoldenrodyellow;\n    box-sizing: border-box;\n    width: 100vw;\n    height: 25%;\n    flex-wrap: no-wrap;\n    /* padding: 20px; */\n\n    .break {\n    flex-basis: 100%;\n    height: 0;\n    }\n\n    .title {\n        font-size: 2.5vw;\n    }\n\n    .pageLinks {\n        display: flex;\n        flex-direction: row;\n        width: auto;\n        font-size: 2vw;\n    }\n\n`;\n\nconst Header = () => {\n    return (\n        <Head>\n            <div className=\"title\">\n                <h1><Link to=\"/\" >Scary Movie Night is Back!</Link></h1>\n                <div className=\"break\"></div>\n            </div>\n\n            <div className=\"pageLinks\">\n            <h3> - <Link to=\"/upload\">Upload a funny Gif</Link> - </h3>\n            <h3> - <Link to=\"/gifs\"> Look at funny Gifs</Link> - </h3>\n            <h3> - <Link to=\"/database\">Movies We've Seen</Link> - </h3>\n            </div>\n        </Head>\n    )\n};\n\nexport default Header;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst Load = styled.div`\n    text-align: center;\n    width: 60vw;\n    height: 25vw;\n    \n    position: relative;\n    top:0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n      \n    margin: auto;\n\n    font-size: calc(1em + 1vw);\n\n    .titleSelect {\n        height: auto;\n        font-size: 0.5em;\n    }\n\n    .uploadTitle {\n        margin-top: 10px;\n        margin-bottom: -10px;\n    }\n\n    .returnLink {\n        font-size: 1.2em;\n    }\n`;\n\ninterface HTMLInputEvent extends Event {\n    target: HTMLInputElement & EventTarget & HTMLFormElement;\n}\n\nexport interface listOfMovies {\n    movie: object\n}\n\nclass Upload extends Component<{}, { uploadedFile: any, loaded: number, listOfMovies: any }> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            uploadedFile: null,\n            loaded: 0,\n            listOfMovies: [\n                {\n                    comments: String,\n                    imdb: String,\n                    mtc: String,\n                    rtc: String,\n                    smn: String,\n                    title: String,\n                    __v: Number,\n                    _id: String\n                }]\n        }\n    }\n\n    componentDidMount() {\n        this.callServerForDatabase()\n            .then(data => this.setState({ listOfMovies: data }))\n            .catch(err => console.log(err));\n    };\n\n    callServerForDatabase = async () => {\n        const response = await fetch('/database');\n        const body = await response.json();\n\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    handleUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\n\n        // @ts-ignore: Object is possibly 'null'.\n        console.log(e.target.files[0])\n\n        this.setState({\n            // @ts-ignore: Object is possibly 'null'.\n            uploadedFile: e.target.files[0],\n            loaded: 0\n        });\n\n        e.preventDefault();\n    };\n\n    onClickHandler = () => {\n        const data = new FormData()\n        data.append('file', this.state.uploadedFile)\n        axios.post(\"http:localhost:3000/upload\", data, {\n\n        })\n            .then(res => {\n                console.log(res.statusText)\n            })\n    }\n\n    render() {\n        return (\n            <Load>\n                <div className=\"uploadTitle\">Upload a funny Gif for one of the Movies we've seen!</div>\n                <br />\n                <form method=\"POST\" action=\"/upload\" encType=\"multipart/form-data\">\n                    <label className=\"titleSelect\">For Which Movie?  </label>\n                    <select className=\"titleSelect\" name=\"title\">\n                        {this.state.listOfMovies.map((movie: any) =>\n                            <option value={movie.title}>{movie.title}</option>\n                        )}\n                    </select>\n                    <br />\n                    <br />\n                    <input type=\"file\" name=\"funnygif\" onChange={this.handleUpload} />\n                    <button type=\"submit\" onClick={this.onClickHandler}>Upload GIF</button>\n                </form>\n                <br />\n                <a className=\"returnLink\" href=\"/\"><i>Return To Main Page</i></a>\n            </Load>\n        )\n    }\n};\n\nexport default Upload;","import React, { Component } from 'react';\nimport styled from 'styled-components';\n// import { Link } from 'react-router-dom';\n\nconst SearchFormStyle = styled.div`\n    text-align: center; \n    align-content: center; \n    margin: 2px;\n    min-height: 55%;\n    padding-bottom: 150px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    flex-wrap: wrap;\n    width: 100vw;\n\n    .response {\n      width: 100vw;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .notFound {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: orangered;\n        border-radius: 20px;\n        width: 250px;\n    }\n\n    .trailerMainDiv {\n      width: 100vw;\n      text-align: center;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-wrap: wrap;\n    }\n\n    .videoContainer {\n      height: 200px;\n      width: 60vw;\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      align-items: center;\n\n    }\n\n    .video {\n      width: auto;\n      height: auto;\n    }\n\n    .trailerButton {\n      height: auto;\n      width: 25px;\n      font-size: 25px;\n      background: powderblue;\n      border: 0px;\n      padding: 2px;\n    }\n\n    .fullWidth {\n      width: 100vw;\n    }\n    \n\n    .compareButton {\n      font-size: 15px;\n    }\n\n    .compareList {\n      justify-content: left;\n      align-items: left;\n      width: 200px;\n      height: auto;\n      text-align: left;\n      border: 1px solid black;\n      border-radius: 20px;\n    }\n\n    .hrefButton {\n      background: darkred;\n      opacity: 0.8;\n      color: white;\n      width: 100px;\n      height: 25px;\n      text-align: center;\n    }\n    \n    .oneMoreMovie {\n      font-size: 11px;\n    }\n`;\n\nconst StyledTable = styled.table`\n  caption-side: top;\n  border: none;\n  border-radius: 10px;\n  border-collapse: collapse;\n  background-color: linen;\n  width: 100vw;\n  max-width: 600px;\n  font-size: 15px;\n\n  th, td {\n      border: none;\n      margin: 5px;\n  }\n\n  td {\n    padding: 5px 10px;\n  }\n\n  thead > tr {\n    background-color: #c2c2c2;\n  }\n  `;\n\n\ninterface MovieResponse {\n  title: string,\n  year: string\n}\n\ninterface IState {\n  searchMovie: string,\n  responseToSearchMovie: MovieResponse[],\n  year: string,\n  error: undefined | string,\n  youtubeData: {\n    items: [\n      { id: { videoId: \"\" } },\n      { id: { videoId: \"\" } },\n      { id: { videoId: \"\" } },\n      { id: { videoId: \"\" } },\n      { id: { videoId: \"\" } }\n    ]\n  },\n  youtubeID: \"\",\n  compareList: any[],\n  trailerList: string[],\n  compareCheck: boolean\n}\n\n\nconst ErrorComponent = (props: { message: string }) => {\n  return <div className=\"notFound\"><h2>{props.message}</h2></div>\n}\n\n\n\nclass SearchFormComponent extends Component<{}, IState> {\n  state: IState = {\n    searchMovie: '',\n    responseToSearchMovie: [],\n    year: '',\n    error: undefined,\n    youtubeData: {\n      items: [\n        { id: { videoId: \"\" } },\n        { id: { videoId: \"\" } },\n        { id: { videoId: \"\" } },\n        { id: { videoId: \"\" } },\n        { id: { videoId: \"\" } }\n      ]\n    },\n    youtubeID: \"\",\n    compareList: [],\n    trailerList: [],\n    compareCheck: false\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const response = await fetch('/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        searchMovie: this.state.searchMovie,\n        year: this.state.year\n      }),\n    });\n\n    if (response.status === 200) {\n      const body = await response.json();\n      const bodyArr: MovieResponse[] = [];\n      bodyArr.push(body);\n      this.setState({ responseToSearchMovie: bodyArr, error: undefined });\n\n      const movieYear: string = this.state.responseToSearchMovie[0].year;\n      const movieTitle: string = this.state.searchMovie;\n\n      this.getYoutubeAPIData(movieYear, movieTitle);\n    } else {\n      this.setState({ responseToSearchMovie: [], error: 'Movie Not Found' })\n    }\n  };\n\n\n  KEY = process.env.REACT_APP_GOOGLE_API_KEY\n\n  getYoutubeAPIData(queryYear: string, queryTitle: string) {\n\n    const query = encodeURIComponent(queryTitle) + '+' + encodeURIComponent(queryYear) + '+trailer'\n    const URI = 'https://www.googleapis.com/youtube/v3/search/?part=snippet&chart=mostPopular&key='\n      + this.KEY + '&q=' + query + '&maxResults=5'\n\n    fetch(URI)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          youtubeData: data,\n          youtubeID: data.items[0].id.videoId\n        });\n      })\n  }\n\n  nextMovieTrailer() {\n    const YT = this.state.youtubeData.items;\n    const ID = this.state.youtubeID;\n\n    if (YT[0].id.videoId === ID) {\n      this.setState({ youtubeID: YT[1].id.videoId })\n    }\n    else if (YT[1].id.videoId === ID) {\n      this.setState({ youtubeID: YT[2].id.videoId })\n    }\n    else if (YT[2].id.videoId === ID) {\n      this.setState({ youtubeID: YT[3].id.videoId })\n    }\n    else if (YT[3].id.videoId === ID) {\n      this.setState({ youtubeID: YT[4].id.videoId })\n    }\n    else if (YT[4].id.videoId === ID) {\n      return\n    }\n  }\n\n  previousMovieTrailer() {\n    const YT = this.state.youtubeData.items;\n    const ID = this.state.youtubeID;\n\n    if (YT[4].id.videoId === ID) {\n      this.setState({ youtubeID: YT[3].id.videoId })\n    }\n    else if (YT[3].id.videoId === ID) {\n      this.setState({ youtubeID: YT[2].id.videoId })\n    }\n    else if (YT[2].id.videoId === ID) {\n      this.setState({ youtubeID: YT[1].id.videoId })\n    }\n    else if (YT[1].id.videoId === ID) {\n      this.setState({ youtubeID: YT[0].id.videoId })\n    }\n    else if (YT[0].id.videoId === ID) {\n      return\n    }\n  }\n\n  addToCompareList() {\n    if (!this.state.compareList.includes(this.state.responseToSearchMovie[0])) {\n      this.setState({ compareList: [...this.state.compareList, this.state.responseToSearchMovie[0]] })\n      this.setState({ trailerList: [...this.state.trailerList, this.state.youtubeID]  });\n    } else {\n      alert(\"This movie was already added to the compare list!\")\n    }\n  }\n\n  CompareList() {\n    if (this.state.compareCheck === false) {\n      return (\n        <div className=\"compareList\">\n          <ul>\n            {this.state.compareList.map((movie: any, index: any) =>\n              <div>\n                <li>{movie.title}</li>\n              </div>\n            )}\n          </ul>\n        </div >\n      )\n    }\n    else {\n      return\n    }\n  }\n\n\n  CompareListButton() {\n    if (this.state.compareList.length <= 1) {\n      return (\n        <div className=\"oneMoreMovie\">\n          <i>Add one more movie to compare!</i>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div>\n          <button onClick={() => this.setState({ compareCheck: true })}>Compare</button>\n        </div>\n      )\n    }\n  }\n\n\n  renderSearchForm() {\n    if (this.state.compareCheck === false) {\n      return (\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <p>\n              <strong>What Movie Shall We Watch?</strong>\n            </p>\n            <input\n              type=\"text\"\n              value={this.state.searchMovie}\n              onChange={e => this.setState({ searchMovie: e.target.value })}\n            />\n            <br />\n            <p><i>Year of Release (optional):</i></p>\n            <input\n              type=\"number\"\n              value={this.state.year}\n              onChange={e =>\n                this.setState({ year: e.target.value })\n              }\n            />\n            <br />\n            <br />\n            <button type=\"submit\">Search</button>\n          </form>\n          <br />\n\n          <div className=\"response\">\n            {this.state.error && <ErrorComponent message={this.state.error} />}\n            {this.state.responseToSearchMovie.map((movie: any, index: any) =>\n              <StyledTable>\n                <thead>\n                  <tr key={`head-${index}`}>\n                    <th data-key=\"head-title\">Movie Title</th>\n                    <th data-key=\"head-imdb\">IMDB</th>\n                    <th data-key=\"head-rtc\">Rotten Tomatoes</th>\n                    <th data-key=\"head-mtc\">Metacritic</th>\n                    <th data-key=\"head-year\">Year</th>\n                    <th data-key=\"head-runtime\">Runtime</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  <tr key={index}>\n                    <td data-key=\"Title\">{movie.title}</td>\n                    <td data-key=\"IMDB\">{movie.imdb}</td>\n                    <td data-key=\"RTC\">{movie.rtc}</td>\n                    <td data-key=\"MTC\">{movie.mtc}</td>\n                    <td data-key=\"Year\">{movie.year}</td>\n                    <td data-key=\"Runtime\">{movie.runtime}</td>\n                  </tr>\n                </tbody>\n              </StyledTable>\n            )}\n          </div>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div className=\"response\">\n          {this.state.error && <ErrorComponent message={this.state.error} />}\n          <StyledTable>\n            <thead>\n              <tr key=\"head-compare\">\n                <th data-key=\"head-title\">Movie Title</th>\n                <th data-key=\"head-imdb\">IMDB</th>\n                <th data-key=\"head-rtc\">Rotten Tomatoes</th>\n                <th data-key=\"head-mtc\">Metacritic</th>\n                <th data-key=\"head-year\">Year</th>\n                <th data-key=\"head-runtime\">Runtime</th>\n                {/* <th data-key=\"head-trailer\">Trailer</th> */}\n              </tr>\n            </thead>\n\n            <tbody>\n              {this.state.compareList.map((movie: any, index: any) =>\n\n\n                <tr key={index}>\n                  <td data-key=\"Title\">{movie.title}</td>\n                  <td data-key=\"IMDB\">{movie.imdb}</td>\n                  <td data-key=\"RTC\">{movie.rtc}</td>\n                  <td data-key=\"MTC\">{movie.mtc}</td>\n                  <td data-key=\"Year\">{movie.year}</td>\n                  <td data-key=\"Runtime\">{movie.runtime}</td>\n                </tr>\n              )}\n            </tbody>\n          </StyledTable>\n          <br />\n          <div className=\"videoContainer\">\n            {this.state.trailerList.map((trailerID: any, index: any) => \n\n              <div key={index} className=\"video\">\n                <iframe\n                  title={trailerID}\n                  src={`https://www.youtube.com/embed/${trailerID}`}\n                  allowFullScreen>\n                </iframe>\n              </div>\n            )}\n          </div>\n          <br />\n          <a href=\"/\"><i>Return To Main Page</i></a>\n        </div>\n      )\n    }\n  }\n\n  renderMovieTrailer() {\n    if (this.state.youtubeID === \"\" || this.state.error || this.state.compareCheck === true) {\n      return\n    }\n    else {\n      return (\n        <div className=\"trailerMainDiv\">\n          \n          <div className=\"fullWidth\">\n          <i>Not the trailer you're looking for? Click to scroll!</i>\n          </div>\n\n          <div className=\"videoContainer\">\n\n            <button className=\"trailerButton\" onClick={() => this.previousMovieTrailer()}>&lt;</button>\n\n            <div className=\"video\">\n              <iframe\n                title=\"trailer\"\n                src={`https://www.youtube.com/embed/${this.state.youtubeID}`}\n                allowFullScreen>\n              </iframe>\n            </div>\n\n            <button className=\"trailerButton\" onClick={() => this.nextMovieTrailer()}>&gt;</button>\n          </div>\n\n          <br />\n          <div className=\"fullWidth\">\n          <button className=\"compareButton\" onClick={() => this.addToCompareList()}><i>Click to compare</i></button>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  renderCompareList() {\n\n    if (this.state.compareList.length === 0 || this.state.compareCheck === true) {\n      return\n    }\n    else {\n      return (\n        <div>\n          {this.CompareList()}\n          {this.CompareListButton()}\n        </div>\n      )\n    }\n  }\n\n  render() {\n    console.log(this.state.responseToSearchMovie)\n\n    return (\n      <SearchFormStyle>\n\n        {this.renderSearchForm()}\n\n        <br />\n\n        {this.renderMovieTrailer()}\n\n        <br />\n\n        {this.renderCompareList()}\n\n      </SearchFormStyle>\n    );\n  }\n};\n\nexport default SearchFormComponent;","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Gif = styled.div`\n    text-align: center;\n    width: 100vw;\n    height: 100vw; \n    \n    position: relative;\n    top:0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n      \n    margin: auto;\n\n    .gif {\n        width: 50vw;\n        max-width: 750px;\n    }\n\n    .gifContainer {\n        font-size: 1.5vw;\n    }\n\n    .returnLink {\n        font-size: 1.2em;\n    }\n`;\n\nexport interface listOfMovies {\n    movie: object\n}\n\nclass Gifs extends Component<{}, { listOfMovies: any[], listOfUrls: String[] }> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            listOfMovies: [\n                {\n                    comments: String,\n                    imdb: String,\n                    mtc: String,\n                    rtc: String,\n                    smn: String,\n                    title: String,\n                    pictureUrl: String\n                }],\n            listOfUrls: []\n        }\n    }\n\n\n    componentDidMount() {\n        this.callServerForDatabase()\n            .then(data => this.setState({ listOfMovies: data }))\n            .catch(err => console.log(err));\n    };\n\n    callServerForDatabase = async () => {\n        const response = await fetch('/database');\n        const body = await response.json();\n\n        console.log(\"Response Body: \", body)\n\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    createListOfUrlsAndTitles() {\n\n        let urlArr: {}[] = [];\n\n        this.state.listOfMovies.map((movie: any) => {\n            \n            for (let i = 0; i < movie.pictureUrl.length; i++) {\n                if (movie.pictureUrl) {\n                    urlArr.push({ \n                        title: movie.title, \n                        pictureUrl: movie.pictureUrl[i] \n                    })\n                }\n            }\n        })\n\n        return urlArr;\n    };\n\n    listOfMovies() {\n        const listOfGifs = this.createListOfUrlsAndTitles();\n\n            console.log(\"LOM: \", this.state.listOfMovies)\n            console.log(\"LOU: \", this.state.listOfUrls)\n\n            return (\n                listOfGifs.map((gif: any, index: any) => {\n                    return (\n                        <div className=\"gifContainer\" key={index}>\n                            <p>\n                                <img src={gif.pictureUrl} alt=\"This gif is actually hilarious\" className=\"gif\" />\n                                <br />\n                                {gif.title}\n                            </p>\n                        </div>\n                    )\n                })\n            )\n        }\n\n    render() {\n        return(\n            <Gif>\n            { this.listOfMovies() }\n\n            < br />\n            <a className=\"returnLink\" href=\"/\"><i>Return To Main Page</i></a>\n            </Gif >\n        )}\n};\n\nexport default Gifs;","import * as React from 'react';\nimport styled from 'styled-components';\n// import { withRouter } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nconst EditBody = styled.div`\n    text-align: center;\n    width: 100vw;\n    height: 100vw;\n    \n    position: relative;\n    top:0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    margin: auto;\n\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n\n    .container {\n        align-items: center;\n        height: 100%;\n    }\n\n    .inputrow {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        height: 50px;\n    }\n\n    .description {\n        text-align: center;\n        width: 200px;\n        align-items: center;\n    }\n\n    .input {\n        width: 200px;\n    }\n\n    #submitButton {\n        margin: 15px;\n    }\n\n    .returnLink {\n        font-size: 1.2em;\n    }\n`;\n\n\nexport interface Props {\n    match: {\n        params: {\n            title: string\n        }\n    },\n    history: any\n}\n\ntype MovieObject = {\n    comments: string,\n    imdb: string,\n    mtc: string,\n    rtc: string,\n    smn: string,\n    title: string\n}\n\nclass Edit extends React.Component<Props, { movie: any, edited: boolean }> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            movie: [\n                {\n                    comments: '',\n                    imdb: '',\n                    mtc: '',\n                    rtc: '',\n                    smn: '',\n                    title: '',\n                    pictureUrl: '',\n                    __v: Number,\n                    _id: String\n                }],\n            edited: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    };\n\n    componentDidMount() {\n        this.callServerForDatabase()\n            .then(data => this.setState({ movie: data }))\n            .catch(err => console.log(err));\n    };\n\n    callServerForDatabase = async () => {\n        const { match: { params } } = this.props;\n\n        const response = await fetch(`/edit/${params.title}`);\n        const body = await response.json();\n\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    handleChange(e: any) {\n        const name = e.target.name;\n        const value = e.target.value;\n\n        let thisStateMovieClone: MovieObject[] = [...this.state.movie];\n\n        let updatedMovieObj: MovieObject = {\n            ...thisStateMovieClone[0],\n            [name]: value\n        }\n\n        thisStateMovieClone[0] = updatedMovieObj;\n\n        this.setState({\n            movie: thisStateMovieClone\n        })\n    }\n\n\n    handleUpdate = (e: any) => {\n        e.preventDefault();\n\n        axios.post(`/edit/${this.state.movie.title}`, this.state.movie)\n            .then(() => {\n                this.setState({ edited: true });\n            })\n        // .then(() => {\n        //     return <Redirect to=\"/database\" />\n        // })\n    };\n\n    handleDelete = (e: any) => {\n        e.preventDefault();\n\n        axios.post('/delete', this.state.movie)\n            .then(() => {\n                this.setState({ edited: true });\n            })\n        // .then(() => {\n        //     return <Redirect to=\"/database\" />\n        // })\n    };\n\n    render() {\n        const { edited } = this.state\n\n        if (edited) {\n            return <Redirect to=\"/database\" />\n        }\n\n        return (\n            <EditBody>\n                <h2>Update Movie Data</h2>\n\n\n                {this.state.movie.map((movie: any, index: any) =>\n                    <div key={index} className=\"container\">\n                        <form action={`/edit/${movie.title}?_method=PUT`} method=\"PUT\">\n\n                            <div className=\"inputrow\">\n                                <p className=\"description\">Movie Title\n                                    <input className=\"input\" type=\"text\" value={movie.title} onChange={this.handleChange} name=\"title\" /></p></div>\n\n                            <div className=\"inputrow\">\n                                <p className=\"description\">IMDB Score\n                                <input className=\"input\" type=\"text\" value={movie.imdb} onChange={this.handleChange} name=\"imdb\" /></p></div>\n\n                            <div className=\"inputrow\">\n                                <p className=\"description\">Rotten Tomatoes Score\n                                <input className=\"input\" type=\"text\" value={movie.rtc} onChange={this.handleChange} name=\"rtc\" /></p></div>\n\n                            <div className=\"inputrow\">\n                                <p className=\"description\">Metacritic Score\n                                <input className=\"input\" type=\"text\" value={movie.mtc} onChange={this.handleChange} name=\"mtc\" /></p></div>\n\n                            <div className=\"inputrow\">\n                                <p className=\"description\">Scary Movie Night Score\n                                <input className=\"input\" type=\"text\" value={movie.smn} onChange={this.handleChange} name=\"smn\" /></p></div>\n\n                            <div className=\"inputrow\">\n                                <p className=\"description\">Comments\n                                <input className=\"input\" type=\"text\" value={movie.comments} onChange={this.handleChange} name=\"comments\" /></p></div>\n\n                            <div className=\"hiddenRow\">\n                                <input type=\"hidden\" value={movie._id} name=\"_id\" />\n                            </div>\n\n\n                            <button id=\"submitButton\" type=\"submit\" onClick={this.handleUpdate}><h2>Update Movie</h2></button> or <button id=\"submitButton\" type=\"submit\" onClick={this.handleDelete}><h2>Delete Movie</h2></button>\n\n                        </form>\n                    </div>\n                )}\n                <br />\n                <a className=\"returnLink\" href=\"/\"><i>Return To Main Page</i></a>\n            </EditBody>\n        )\n    }\n};\n\n\nexport default Edit;","import React, { Component } from 'react';\nimport styled from 'styled-components';\n// import { withRouter } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nconst EditBody = styled.div`\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    \n    position: relative;\n    top:0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    margin: auto;\n\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n\n    .container {\n        align-items: center;\n        height: 100%;\n    }\n\n    .inputrow {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        height: 50px;\n    }\n\n    .description {\n        text-align: center;\n        width: 200px;\n        align-items: center;\n    }\n\n    .input {\n        width: 200px;\n    }\n\n    #submitButton {\n        margin: 15px;\n    }\n\n    .returnLink {\n        font-size: 1.2em;\n    }\n`;\n\nexport interface Props {\n    match: {\n        params: {\n            title: string\n        }\n    },\n    history: any\n}\n\ninterface MovieObject {\n    comments: string;\n    imdb: string;\n    mtc: string;\n    rtc: string;\n    smn: string;\n    title: string;\n}\n\nclass NewMovie extends Component<Props, { movie: any, added?: boolean }> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            movie: [\n                {\n                    comments: '',\n                    imdb: '',\n                    mtc: '',\n                    rtc: '',\n                    smn: '',\n                    title: ''\n                }],\n            added: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    };\n\n\n    handleChange(e: any) {\n        const name = e.target.name;\n        const value = e.target.value;\n\n        let thisStateMovieClone: MovieObject[] = [...this.state.movie];\n\n        let updatedMovieObj: MovieObject = {\n            ...thisStateMovieClone[0],\n            [name]: value\n        }\n\n        thisStateMovieClone[0] = updatedMovieObj;\n\n        this.setState({\n            movie: thisStateMovieClone\n        })\n    }\n\n\n    handleSubmit = (e: any) => {\n        e.preventDefault();\n        console.log(this.state.movie)\n\n        axios.post('/new', this.state.movie)\n            .then(() => {\n                this.setState({ added: true })\n            })\n    };\n\n    render() {\n        const { added } = this.state\n\n        if (added) {\n            return <Redirect to=\"/database\" />\n        }\n\n        return (\n            <EditBody>\n                <h2>Add Movie Data</h2>\n\n\n                {this.state.movie.map((movie: any, index: any) =>\n                    <div key={index} className=\"container\">\n                        <form action={`/edit/${movie.title}?_method=POST`} method=\"POST\">\n\n                            <div className=\"inputrow\">\n                                <p className=\"description\">Movie Title\n                                    <input className=\"input\" type=\"text\" value={movie.title} onChange={this.handleChange} name=\"title\" /></p></div>\n\n                            <div className=\"inputrow\">\n                                <p className=\"description\">IMDB Score\n                                <input className=\"input\" type=\"text\" value={movie.imdb} onChange={this.handleChange} name=\"imdb\" /></p></div>\n\n\n                            <div className=\"inputrow\">\n                                <p className=\"description\">Rotten Tomatoes Score\n                                <input className=\"input\" type=\"text\" value={movie.rtc} onChange={this.handleChange} name=\"rtc\" /></p></div>\n\n                            <div className=\"inputrow\">\n                                <p className=\"description\">Metacritic Score\n                                <input className=\"input\" type=\"text\" value={movie.mtc} onChange={this.handleChange} name=\"mtc\" /></p></div>\n\n                            <div className=\"inputrow\">\n                                <p className=\"description\">Scary Movie Night Score\n                                <input className=\"input\" type=\"text\" value={movie.smn} onChange={this.handleChange} name=\"smn\" /></p></div>\n\n                            <div className=\"inputrow\">\n                                <p className=\"description\">Comments\n                                <input className=\"input\" type=\"text\" value={movie.comments} onChange={this.handleChange} name=\"comments\" /></p></div>\n\n\n                            <button id=\"submitButton\" type=\"submit\" onClick={this.handleSubmit}><h2>Add New Movie</h2></button>\n\n                        </form>\n                    </div>\n                )}\n                <br />\n                <a className=\"returnLink\" href=\"/\"><i>Return To Main Page</i></a>\n            </EditBody>\n\n        )\n    }\n};\n\n\nexport default NewMovie;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { SearchForm, Gifs, Header, Upload, Database, Edit, NewMovie } from './views/export'\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n\n    margin: 0;\n    padding: 0;\n    background-color: powderblue;\n    height: 100%;\n\n    a {\n      color: #000000;\n    }\n  }\n`\n\nconst Container = styled.div`\n  background-color: powderblue;\n  min-height: 100%;  \n  width: 100%;\n  position: relative;  \n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <Container>\n      \n      <Router>\n        <Header />\n        <Route\n          path=\"/\"\n          component={SearchForm}\n          exact\n        />\n        <Route\n          path=\"/database\"\n          component={Database}\n        />\n        <Route\n          path=\"/upload\"\n          component={Upload}\n        />\n        <Route\n          path=\"/gifs\"\n          component={Gifs}\n        />\n        <Route\n          path=\"/edit/:title\"\n          component={Edit}\n        />\n        <Route\n          exact path=\"/new\"\n          component={NewMovie}\n        />\n      </Router>\n\n    </Container>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}